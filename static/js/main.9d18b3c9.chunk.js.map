{"version":3,"sources":["n1-main/m1-UI/Common/InputAndButton/c1-SuperInputText/SuperInputText.module.css","n1-main/m1-UI/Common/Error404/Error404.module.css","n1-main/m1-UI/Common/InputAndButton/c3-SuperCheckbox/SuperCheckbox.module.css","n1-main/m1-UI/Common/InputAndButton/c6-SuperRadio/SuperRadio.module.css","n1-main/m1-UI/Common/InputAndButton/c2-SuperButton/SuperButton.module.css","n1-main/m1-UI/Common/InputAndButton/c4-SuperEditableSpan/SuperEditableSpan.module.css","n1-main/m1-UI/Common/InputAndButton/c5-SuperSelect/SuperSelect.module.css","n1-main/m1-UI/Common/InputAndButton/c7-SuperRange/SuperRange.module.css","n1-main/m1-UI/Route/Routes.tsx","n1-main/m1-UI/Common/InputAndButton/c1-SuperInputText/SuperInputText.tsx","n1-main/m1-UI/Common/InputAndButton/c2-SuperButton/SuperButton.tsx","n1-main/m1-UI/Common/InputAndButton/c3-SuperCheckbox/SuperCheckbox.tsx","n1-main/m1-UI/Common/InputAndButton/c4-SuperEditableSpan/SuperEditableSpan.tsx","n1-main/m1-UI/Common/InputAndButton/c5-SuperSelect/SuperSelect.tsx","n1-main/m1-UI/Common/InputAndButton/c6-SuperRadio/SuperRadio.tsx","n1-main/m1-UI/Common/InputAndButton/c7-SuperRange/SuperRange.tsx","n1-main/m1-UI/Common/TestComponent/TestComponent.tsx","n1-main/m1-UI/Common/Login/Login.tsx","n1-main/m1-UI/Common/Registration/Registration.tsx","n1-main/m1-UI/Common/Profile/Profile.tsx","n1-main/m1-UI/Common/PasswordRecovery/PasswordRecovery.tsx","n1-main/m1-UI/Common/Error404/Error404.tsx","App.tsx","reportWebVitals.ts","n1-main/m2-BLL/01-reduser1/start.tsx","n1-main/m2-BLL/00-store/store.tsx","index.tsx"],"names":["module","exports","Navbar","to","RoutePath","LOGIN","REGISTRATION","PROFILE","PASSWORD_RECOVERY","TEST_COMPONENT","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","className","title","restProps","buttonCallback","finalSpanClassName","s","errorText","finalInputClassName","errorInputTrue","errorInputFalse","Input","e","currentTarget","value","key","buttonErrorFalse","buttonErrorTrue","onClick","alert","SuperButton","red","onClickButon","SuperCheckbox","onChangeChecked","cheked","children","checkbox","checked","option_input","radio","name","SuperEditableSpan","autoFocus","onBlur","spanProps","useState","editMode","setEditMode","onDoubleClick","restSpanProps","css","span","editable","SuperSelect","options","onChangeOption","mappedOptions","map","t","Body","select","id","console","log","SuperRadio","opt","i","onChangeCallback","check","toString","container","SuperRange","onChangeRange","max","finalRangeClassName","range","TestComponent","Login","Registration","Profile","src","alt","PasswordRecovery","Error","App","space","R","off","ERROR_404","REDIRECT","style","float","margin","height","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","start","rootReducer","combineReducers","state","action","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d18b3c9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2oTph\",\"Input\":\"SuperInputText_Input__8hqtY\",\"errorInputTrue\":\"SuperInputText_errorInputTrue__E51I5\",\"errorInputFalse\":\"SuperInputText_errorInputFalse__2nwwM\",\"errorText\":\"SuperInputText_errorText__1Si7T\",\"errorSuperInput\":\"SuperInputText_errorSuperInput__32VGY\",\"buttonErrorFalse\":\"SuperInputText_buttonErrorFalse__1PulB\",\"buttonErrorTrue\":\"SuperInputText_buttonErrorTrue__2LyQl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"Error404_App__3Ya5h\",\"space\":\"Error404_space__3yaO1\",\"R\":\"Error404_R__17n-z\",\"blink\":\"Error404_blink__3U1w_\",\"slowBlink\":\"Error404_slowBlink__GC9xd\",\"off\":\"Error404_off__1ge-6\",\"hangEdge\":\"Error404_hangEdge__2gXf_\",\"hang\":\"Error404_hang__3A8jA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1kt1u\",\"spanClassName\":\"SuperCheckbox_spanClassName__1U7nI\",\"option_input\":\"SuperCheckbox_option_input__3ADpd\",\"click-wave\":\"SuperCheckbox_click-wave__1-ITl\",\"radio\":\"SuperCheckbox_radio__2-1L_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SuperRadio_container__1WqV9\",\"check\":\"SuperRadio_check__25E5-\",\"signature\":\"SuperRadio_signature__Rx1fT\",\"much-heart\":\"SuperRadio_much-heart__2V0GF\",\"alert\":\"SuperRadio_alert__2qsQF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2I6e5\",\"red\":\"SuperButton_red__2v5--\",\"buttonErrorFalse\":\"SuperButton_buttonErrorFalse__3pBVc\",\"buttonErrorTrue\":\"SuperButton_buttonErrorTrue__3HHof\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"span\":\"SuperEditableSpan_span__114DI\",\"editable\":\"SuperEditableSpan_editable__1jFqA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Body\":\"SuperSelect_Body__1TeeI\",\"select\":\"SuperSelect_select__dBIyv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__2VEgF\"};","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {RoutePath} from \"../../../App\";\r\n\r\nexport const Navbar = () =>{\r\n    return (\r\n        <div>\r\n            <div>\r\n                <NavLink to={RoutePath.LOGIN}>Login</NavLink>\r\n            </div>\r\n\r\n            <div>\r\n                <NavLink to={RoutePath.REGISTRATION}>Registration</NavLink>\r\n            </div>\r\n\r\n            <div>\r\n                <NavLink to={RoutePath.PROFILE}>Profile</NavLink>\r\n            </div>\r\n\r\n            <div>\r\n                <NavLink to={RoutePath.PASSWORD_RECOVERY}>Password recovery</NavLink>\r\n            </div>\r\n\r\n            <div>\r\n                <NavLink to={RoutePath.TEST_COMPONENT}>Test component</NavLink>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React, {\r\n    ChangeEvent,\r\n    DetailedHTMLProps,\r\n    InputHTMLAttributes,\r\n    KeyboardEvent,\r\n} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string | null\r\n    spanClassName?: string\r\n    buttonCallback?:(a:any)=>void\r\n    title?:string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,title,\r\n        buttonCallback,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement> ) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n\r\n    }\r\n\r\n    const onChangeCallbackButton =()=> {\r\n       alert('hello')\r\n    }\r\n\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n\r\n    const finalSpanClassName = `${s.errorText} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = error ?`${s.errorInputTrue} `:`${s.errorInputFalse} ` // need to fix with (?:) and s.superInput\r\n\r\n\r\n    return (\r\n        <div className={s.Input}>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            <button className={error?  s.buttonErrorFalse : s.buttonErrorTrue  } onClick={onChangeCallbackButton} >\r\n                {title?title:'add'}\r\n            </button>\r\n            <div className={finalSpanClassName}>\r\n\r\n                {error && <div className={finalSpanClassName}>{error}</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n    title?:string\r\n    onClickButon?: () => void\r\n    onChange?:any\r\n\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,title,onChange,onClickButon,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    //const finalClassName = `${red ? s.red : s.default} ${className}`;\r\n    //const finalClassName={ props.error? s.buttonErrorTrue : s.buttonErrorFalse}\r\n\r\n    const onClick = () =>{\r\n        onClickButon && onClickButon()\r\n    }\r\n\r\n\r\n    return (\r\n        <button\r\n            className={red? s.buttonErrorTrue : s.buttonErrorFalse }\r\n            //className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n            onClick={onClick}\r\n        >{title}</button>\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n    title?:string\r\n    cheked?:boolean\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,title,cheked,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    // const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <div className={s.checkbox}>\r\n            {/*<label>\r\n\r\n                <input\r\n                    type={\"checkbox\"}\r\n                    onChange={onChangeCallback}\r\n                    className={finalInputClassName}\r\n                    {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n                />\r\n                {title}\r\n                {children && <span className={s.spanClassName}>{children}</span>}\r\n            </label> // благодаря label нажатие на спан передастся в инпут\r\n*/}\r\n\r\n            <label>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    checked={cheked}\r\n                    onChange={onChangeCallback}\r\n                    className={`${s.option_input} ${s.radio}`}\r\n                    name=\"example\"\r\n                    {...restProps}\r\n                />\r\n                {title}\r\n            </label>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from \"react\";\r\nimport SuperInputText from \"../c1-SuperInputText/SuperInputText\";\r\nimport css from './SuperEditableSpan.module.css'\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n};\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false)// setEditMode(); // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter();\r\n    };\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false)   // setEditMode(); // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e);\r\n    };\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true)// setEditMode(); // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e);\r\n    };\r\n\r\n    const spanClassName = `${css.span} ${className}`;\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                        <div className={css.editable}>editable text</div>\r\n                    </span>\r\n\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperEditableSpan;\r\n","import css from './SuperSelect.module.css'\r\n\r\nimport React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from \"react\";\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: string[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n\r\n\r\n    const mappedOptions = options && options.map((t)=> <option value={t} key={t}>{t}</option>); // map options with key\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n\r\n        console.log(e.currentTarget.value)\r\n\r\n        // onChange, onChangeOption\r\n         onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className={css.Body}>\r\n            <div className={css.select}>\r\n                <select  name=\"format\" id=\"format\" onChange={onChangeCallback} {...restProps}>\r\n\r\n                    {mappedOptions}\r\n\r\n                </select>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default SuperSelect;\r\n","import css from './SuperRadio.module.css'\r\n\r\nimport React, {InputHTMLAttributes, DetailedHTMLProps} from \"react\";\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: string) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n\r\n\r\n    const onChangeCallback = (value: string) => {\r\n\r\n        onChangeOption &&\r\n        onChangeOption(value)\r\n    }\r\n\r\n\r\n    const mappedOptions = options ? options.map((opt, i) => { // map options with key\r\n\r\n        return  <li  key={opt.toString()}>\r\n                    <label  >\r\n\r\n                        <input\r\n\r\n                            type={\"radio\"}\r\n                            name={opt}\r\n                            checked={value === opt}\r\n                            onChange={() => onChangeCallback(opt)}\r\n                            value={value}\r\n\r\n\r\n                            id=\"f-option\"\r\n                            //name=\"selector\"\r\n                        />\r\n                        <span className={css.check}></span>\r\n                        {opt}\r\n                    </label>\r\n                </li>\r\n    }) : [];\r\n\r\n    return (\r\n            <div className={css.container}>\r\n                <div className={css.red}>\r\n                </div>\r\n                <ol>\r\n                    {mappedOptions}\r\n                </ol>\r\n            </div>\r\n\r\n    );\r\n}\r\n\r\nexport default SuperRadio;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperRange.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeRange?: (value: number) => void\r\n};\r\n\r\nconst SuperRange: React.FC<SuperRangePropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeRange,\r\n        className,\r\n    value,max,\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e); // сохраняем старую функциональность\r\n\r\n        onChangeRange && onChangeRange(+e.currentTarget.value);\r\n    }\r\n\r\n    const finalRangeClassName = `${s.range} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                max={max}\r\n                value={value}\r\n                type={\"range\"}\r\n                onChange={onChangeCallback}\r\n                className={finalRangeClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperRange;\r\n","import SuperInputText from \"../InputAndButton/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../InputAndButton/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../InputAndButton/c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperEditableSpan from \"../InputAndButton/c4-SuperEditableSpan/SuperEditableSpan\";\r\nimport SuperSelect from \"../InputAndButton/c5-SuperSelect/SuperSelect\";\r\nimport SuperRadio from \"../InputAndButton/c6-SuperRadio/SuperRadio\";\r\nimport SuperRange from \"../InputAndButton/c7-SuperRange/SuperRange\";\r\nimport React from \"react\";\r\n\r\nexport const TestComponent = () =>{\r\n    return(\r\n        <div>\r\n            <SuperInputText title={'alert'}/>\r\n            <SuperButton title={'push'}/>\r\n            <SuperCheckbox/>\r\n            <SuperEditableSpan/>\r\n            <SuperSelect options={['1','2','3']}/>\r\n            <SuperRadio options={[1,2,3,4,5]}/>\r\n            <SuperRange/>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\nimport SuperInputText from \"../InputAndButton/c1-SuperInputText/SuperInputText\";\r\n\r\n\r\nexport const Login = () => {\r\n    return (\r\n        <div>\r\n            <h2>temporary stub</h2>\r\n            <div>account</div>\r\n            <SuperInputText/>\r\n            <div>password</div>\r\n            <SuperInputText/>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport SuperInputText from \"../InputAndButton/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../InputAndButton/c2-SuperButton/SuperButton\";\r\n\r\n\r\nexport const Registration = () => {\r\n    return (\r\n        <div>\r\n            <h2>temporary stub</h2>\r\n            <h3>Create account</h3>\r\n            <SuperInputText/>\r\n            <h3>your password</h3>\r\n            <SuperInputText/>\r\n            <h3>Your email</h3>\r\n            <SuperInputText/>\r\n            <SuperButton title={'create'}/>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\n\r\nexport const Profile = () => {\r\n    return (\r\n        <div>\r\n            <h2>Profile</h2>\r\n            <img src=\"https://i.ytimg.com/vi/Ha9tQlRTGms/maxresdefault.jpg\" alt=\"\"/>\r\n            <h3>your password</h3>\r\n            <h3>Your email</h3>\r\n\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport SuperInputText from \"../InputAndButton/c1-SuperInputText/SuperInputText\";\r\n\r\n\r\nexport const PasswordRecovery = () => {\r\n    return (\r\n        <div>\r\n            <h2>temporary stub</h2>\r\n            <div>account</div>\r\n            <SuperInputText/>\r\n            <div>password</div>\r\n            <SuperInputText/>\r\n        </div>\r\n    )\r\n}","import css from './Error404.module.css'\r\nimport React from 'react';\r\n\r\nexport const Error = () =>{\r\n    return (\r\n        <div className={css.App}>\r\n            <div className={css.space}>\r\n                Er<span className={css.R}>r</span>o<span>r</span>\r\n            </div>\r\n            <div>\r\n                <span className={css.off}>4</span>0\r\n                <div id='hangEdge'>\r\n                    <span>4</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import './App.css';\n\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport {Navbar} from \"./n1-main/m1-UI/Route/Routes\";\nimport {TestComponent} from \"./n1-main/m1-UI/Common/TestComponent/TestComponent\";\nimport {Login} from './n1-main/m1-UI/Common/Login/Login';\nimport {Registration} from \"./n1-main/m1-UI/Common/Registration/Registration\";\nimport {Profile} from \"./n1-main/m1-UI/Common/Profile/Profile\";\nimport {PasswordRecovery} from \"./n1-main/m1-UI/Common/PasswordRecovery/PasswordRecovery\";\nimport {Error} from \"./n1-main/m1-UI/Common/Error404/Error404\";\n\nexport const RoutePath = {\n    LOGIN: \"/login\",\n    REGISTRATION: '/registration',\n    PROFILE: '/profile',\n    PASSWORD_RECOVERY: '/recovery',\n    TEST_COMPONENT: \"/testComponent\",\n    ERROR_404: \"/404\",\n    REDIRECT: '*',\n}\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <div style={{float: 'left', margin: '40px', height: '1000px'}}>\n                <Navbar/>\n            </div>\n            <div style={{margin: '40px'}}>\n                <Switch>\n                    <Route exact path={RoutePath.LOGIN} render={() => <Login/>}/>\n                    <Route exact path={RoutePath.REGISTRATION} render={() => <Registration/>}/>\n                    <Route exact path={RoutePath.PROFILE} render={() => <Profile/>}/>\n                    <Route exact path={RoutePath.PASSWORD_RECOVERY} render={() => <PasswordRecovery/>}/>\n                    <Route exact path={RoutePath.TEST_COMPONENT} render={() => <TestComponent/>}/>\n                    <Route path={RoutePath.REDIRECT} render={() => <Error/>}/>\n                    {/*<Redirect from={RoutePath.REDIRECT} to={RoutePath.ERROR_404}/>*/}\n\n                </Switch>\n            </div>\n\n\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nlet initialState = {\r\n    start:'Hello'\r\n}\r\nexport type InitialState = typeof initialState\r\n\r\nexport const StartReducer = (state:InitialState = initialState,action:ActionType):InitialState=>{\r\n    switch(action.type){\r\n        case 'START':\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const start = () => ({type:'START'}as const)\r\nexport type Start = ReturnType<typeof start>\r\n\r\nexport type ActionType = Start","import {combineReducers, createStore} from \"redux\";\r\nimport {StartReducer} from \"../01-reduser1/start\";\r\n\r\nlet rootReducer = combineReducers({\r\n    start:StartReducer\r\n})\r\n\r\n\r\nexport let store = createStore(rootReducer)\r\n\r\nexport type AppStoreType = typeof store\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./n1-main/m2-BLL/00-store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <HashRouter>\n          <Provider store={store}>\n            <App />\n          </Provider>\n      </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}